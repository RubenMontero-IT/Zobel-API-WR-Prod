// <auto-generated />
using System;
using DhubSolutions.WealthReport.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Zobel.WealthReport.Infrastructure.Data.Migrations.WealthReport
{
    [DbContext(typeof(WealthReportDbContext))]
    [Migration("20200424055112_AddingStyleEntity")]
    partial class AddingStyleEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.Currency", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CurrencyID")
                        .HasColumnType("char(3)")
                        .IsUnicode(false);

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Currency","gral");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.FXRate", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FXRateID")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("EndCurrency")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<double>("FXRateValue");

                    b.Property<string>("InitialCurrency")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("Date", "InitialCurrency", "EndCurrency")
                        .IsUnique()
                        .HasName("IX_FXRate");

                    b.ToTable("FXRate","market");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.Frequency", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FrequencyID")
                        .HasMaxLength(100);

                    b.Property<string>("FrequencyName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Frequency","market");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.Liquidity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LiquidityID")
                        .HasMaxLength(100);

                    b.Property<string>("LiquidityValue")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Liquidity","market");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.LiquidityProduct", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LiquidityProductID")
                        .HasMaxLength(100);

                    b.Property<string>("LiquidityID")
                        .IsRequired()
                        .HasColumnName("LiquidityID")
                        .HasMaxLength(100);

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnName("ProductID")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("LiquidityID");

                    b.HasIndex("ProductID", "LiquidityID")
                        .IsUnique()
                        .HasName("IX_LiquidityProduct");

                    b.ToTable("LiquidityProduct","market");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.MetricsCategories", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasMaxLength(100);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("MetricCode")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Plevel")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("MetricsCategories","gral");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.OrganizationProduct", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrgProductID")
                        .HasMaxLength(100);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<double?>("EntryPrice");

                    b.Property<double?>("ExitNumberOfUnits");

                    b.Property<double?>("ExitPrice");

                    b.Property<double?>("InitNumberOfUnits");

                    b.Property<DateTime?>("InitialDate")
                        .HasColumnType("date");

                    b.Property<double?>("InitialInvestmentEUR");

                    b.Property<string>("OrganizationID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ProductID", "OrganizationID")
                        .IsUnique()
                        .HasName("IX_OrganizationProduct");

                    b.ToTable("OrganizationProduct","invp");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.OrganizationProductExtendedRegistry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrgProductExtendedRegistryID")
                        .HasMaxLength(100);

                    b.Property<string>("BaseCurrencyId")
                        .HasColumnName("BaseCurrency")
                        .HasColumnType("char(3)")
                        .IsUnicode(false);

                    b.Property<string>("BloombergID")
                        .HasMaxLength(100);

                    b.Property<string>("CUSIP")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ISIN")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ITDPL")
                        .HasMaxLength(10);

                    b.Property<string>("ITDPLFX")
                        .HasMaxLength(10);

                    b.Property<string>("ITDRoR")
                        .HasMaxLength(10);

                    b.Property<string>("ITDVol")
                        .HasMaxLength(10);

                    b.Property<string>("MainCurrencyId")
                        .IsRequired()
                        .HasColumnName("MainCurrency")
                        .HasColumnType("char(3)");

                    b.Property<double?>("NAV");

                    b.Property<string>("OrganizationID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double?>("PL");

                    b.Property<double?>("PLFX");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double?>("RoR");

                    b.Property<string>("SEDOL")
                        .HasMaxLength(100);

                    b.Property<string>("Ticker")
                        .HasMaxLength(100);

                    b.Property<string>("VAMI")
                        .HasMaxLength(10);

                    b.Property<string>("Vol")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("BaseCurrencyId");

                    b.HasIndex("MainCurrencyId");

                    b.HasIndex("ProductID", "OrganizationID", "Date", "MainCurrencyId")
                        .IsUnique()
                        .HasName("IX_OrganizationProductExtendedRegistry");

                    b.ToTable("OrganizationProductExtendedRegistry","invpder");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.OrganizationProductRegistry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrgProductRegistryID")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<double>("NumberOfUnits");

                    b.Property<string>("OrganizationID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ProductID", "OrganizationID", "Date")
                        .IsUnique()
                        .HasName("IX_OrganizationProductRegistry");

                    b.ToTable("OrganizationProductRegistry","invp");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.PorfolioCategory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PortfolioCategoryID")
                        .HasMaxLength(100);

                    b.Property<string>("PortfolioCategory")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PorfolioCategory","gral");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.PortfolioCatOrgProd", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PortfolioCatOrgProdID")
                        .HasMaxLength(100);

                    b.Property<string>("OrganizationID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PortfolioCategoryID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ProductID", "OrganizationID");

                    b.HasIndex("PortfolioCategoryID", "ProductID", "OrganizationID")
                        .IsUnique()
                        .HasName("IX_PortfolioCatOrgProd");

                    b.ToTable("PortfolioCatOrgProd","invp");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductID")
                        .HasMaxLength(100);

                    b.Property<string>("AUM");

                    b.Property<string>("Address")
                        .HasMaxLength(256);

                    b.Property<string>("BaseCurrencyId")
                        .HasColumnName("BaseCurrency")
                        .HasColumnType("char(3)")
                        .IsUnicode(false);

                    b.Property<string>("BloombergID")
                        .HasMaxLength(100);

                    b.Property<string>("BloombergName")
                        .HasMaxLength(100);

                    b.Property<string>("CUSIP")
                        .HasMaxLength(100);

                    b.Property<string>("ContactDetails");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("Employees");

                    b.Property<string>("GeneralDescription");

                    b.Property<string>("History");

                    b.Property<string>("ISIN")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastHistUpdate")
                        .HasColumnType("date");

                    b.Property<double?>("ManagementFee");

                    b.Property<string>("ManagerName")
                        .HasMaxLength(256);

                    b.Property<string>("OtherID")
                        .HasMaxLength(256);

                    b.Property<double?>("PeformanceFee");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("RegionId")
                        .HasColumnName("Region")
                        .HasMaxLength(100);

                    b.Property<string>("SEDOL")
                        .HasMaxLength(100);

                    b.Property<string>("Strengh");

                    b.Property<string>("StyleId")
                        .HasColumnName("Style")
                        .HasMaxLength(100);

                    b.Property<bool?>("TakingBackEffect");

                    b.Property<string>("Ticker")
                        .HasMaxLength(100);

                    b.Property<double>("TotalUnitNumber");

                    b.Property<string>("Type")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BaseCurrencyId");

                    b.HasIndex("RegionId");

                    b.HasIndex("StyleId");

                    b.HasIndex("Type");

                    b.ToTable("Product","market");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.ProductExtendedRegistry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProdExtendedRegistryID")
                        .HasMaxLength(100);

                    b.Property<string>("BaseCurrencyId")
                        .IsRequired()
                        .HasColumnName("BaseCurrency")
                        .HasColumnType("char(3)")
                        .IsUnicode(false);

                    b.Property<string>("BloombergID")
                        .HasMaxLength(100);

                    b.Property<string>("CUSIP")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("ISIN")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double?>("ITDPL");

                    b.Property<double?>("ITDRoR");

                    b.Property<double?>("ITDVol");

                    b.Property<string>("MainCurrencyId")
                        .IsRequired()
                        .HasColumnName("MainCurrency")
                        .HasColumnType("char(3)")
                        .IsUnicode(false);

                    b.Property<double?>("NAV");

                    b.Property<double?>("PL");

                    b.Property<double>("Price");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double?>("RoR");

                    b.Property<string>("SEDOL")
                        .HasMaxLength(100);

                    b.Property<string>("Ticker")
                        .HasMaxLength(100);

                    b.Property<double?>("VAMI");

                    b.Property<double?>("Vol");

                    b.HasKey("Id");

                    b.HasIndex("BaseCurrencyId");

                    b.HasIndex("MainCurrencyId");

                    b.HasIndex("ProductID", "Date", "MainCurrencyId")
                        .IsUnique()
                        .HasName("IX_ProductExtendedRegistry");

                    b.ToTable("ProductExtendedRegistry","marketder");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.ProductFrequency", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductFrequencyID")
                        .HasMaxLength(100);

                    b.Property<string>("FrequencyID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("FrequencyID", "ProductID")
                        .IsUnique()
                        .HasName("IX_ProductFrequency");

                    b.ToTable("ProductFrequency","market");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.ProductRegistry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductRegistryID")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<double>("Price");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ProductID", "Date")
                        .IsUnique()
                        .HasName("IX_ProductRegistry");

                    b.ToTable("ProductRegistry","invp");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.ProductType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ProductTypeID")
                        .HasMaxLength(100);

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ProductType","gral");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.Region", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RegionID")
                        .HasMaxLength(100);

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Region","gral");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.Style", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StyleID")
                        .HasMaxLength(100);

                    b.Property<string>("StyleName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Style","gral");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.LiquidityProduct", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.Liquidity", "Liquidity")
                        .WithMany("LiquidityProducts")
                        .HasForeignKey("LiquidityID")
                        .HasConstraintName("FK_LiquidityProduct_Liquidity");

                    b.HasOne("Zobel.WealthReport.Domain.Entities.Product", "Product")
                        .WithMany("LiquidityProducts")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_LiquidityProduct_Product");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.OrganizationProduct", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.Product", "Product")
                        .WithMany("OrganizationProducts")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_OrganizationProduct_Product");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.OrganizationProductExtendedRegistry", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.Currency", "BaseCurrency")
                        .WithMany("OrganizationProductExtendedRegistryBaseCurrencies")
                        .HasForeignKey("BaseCurrencyId")
                        .HasConstraintName("FK_OrganizationProductExtendedRegistry_Currency");

                    b.HasOne("Zobel.WealthReport.Domain.Entities.Currency", "MainCurrency")
                        .WithMany("OrganizationProductExtendedRegistryMainCurrencies")
                        .HasForeignKey("MainCurrencyId")
                        .HasConstraintName("FK_OrganizationProductExtendedRegistry_Currency1");

                    b.HasOne("Zobel.WealthReport.Domain.Entities.OrganizationProductRegistry", "OrganizationProductRegistry")
                        .WithMany("OrganizationProductExtendedRegistries")
                        .HasForeignKey("ProductID", "OrganizationID", "Date")
                        .HasConstraintName("FK_OrganizationProductExtendedRegistry_OrganizationProductRegistry")
                        .HasPrincipalKey("ProductID", "OrganizationID", "Date");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.OrganizationProductRegistry", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.OrganizationProduct", "OrganizationProduct")
                        .WithMany("OrganizationProductRegistries")
                        .HasForeignKey("ProductID", "OrganizationID")
                        .HasConstraintName("FK_OrganizationProductRegistry_OrganizationProduct")
                        .HasPrincipalKey("ProductID", "OrganizationID");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.PortfolioCatOrgProd", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.PorfolioCategory", "PortfolioCategory")
                        .WithMany("PortfolioCatOrgProds")
                        .HasForeignKey("PortfolioCategoryID")
                        .HasConstraintName("FK_PortfolioCatOrgProd_PorfolioCategory");

                    b.HasOne("Zobel.WealthReport.Domain.Entities.OrganizationProduct", "OrganizationProduct")
                        .WithMany("PortfolioCatOrgProds")
                        .HasForeignKey("ProductID", "OrganizationID")
                        .HasConstraintName("FK_PortfolioCatOrgProd_OrganizationProduct")
                        .HasPrincipalKey("ProductID", "OrganizationID");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.Product", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.Currency", "BaseCurrency")
                        .WithMany("Products")
                        .HasForeignKey("BaseCurrencyId")
                        .HasConstraintName("FK_Product_Currency")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Zobel.WealthReport.Domain.Entities.Region", "Region")
                        .WithMany("Products")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_Product_Region");

                    b.HasOne("Zobel.WealthReport.Domain.Entities.Style", "Style")
                        .WithMany("Products")
                        .HasForeignKey("StyleId")
                        .HasConstraintName("FK_Product_Style")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Zobel.WealthReport.Domain.Entities.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("Type")
                        .HasConstraintName("FK_Product_ProductType");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.ProductExtendedRegistry", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.Currency", "BaseCurrency")
                        .WithMany("ProductExtendedRegistryBaseCurrencies")
                        .HasForeignKey("BaseCurrencyId")
                        .HasConstraintName("FK_ProductExtendedRegistry_Currency1");

                    b.HasOne("Zobel.WealthReport.Domain.Entities.Currency", "MainCurrency")
                        .WithMany("ProductExtendedRegistryMainCurrencies")
                        .HasForeignKey("MainCurrencyId")
                        .HasConstraintName("FK_ProductExtendedRegistry_Currency");

                    b.HasOne("Zobel.WealthReport.Domain.Entities.ProductRegistry", "ProductRegistry")
                        .WithMany("ProductExtendedRegistries")
                        .HasForeignKey("ProductID", "Date")
                        .HasConstraintName("FK_ProductExtendedRegistry_ProductRegistry")
                        .HasPrincipalKey("ProductID", "Date");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.ProductFrequency", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.Frequency", "Frequency")
                        .WithMany("ProductFrequencies")
                        .HasForeignKey("FrequencyID")
                        .HasConstraintName("FK_ProductFrequency_Frequency");

                    b.HasOne("Zobel.WealthReport.Domain.Entities.Product", "Product")
                        .WithMany("ProductFrequencies")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_ProductFrequency_Product");
                });

            modelBuilder.Entity("Zobel.WealthReport.Domain.Entities.ProductRegistry", b =>
                {
                    b.HasOne("Zobel.WealthReport.Domain.Entities.Product", "Product")
                        .WithMany("ProductRegistries")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("FK_ProductRegistry_Product");
                });
#pragma warning restore 612, 618
        }
    }
}
